import { SignIn, SignInButton, SignUpButton, UserButton, useUser } from "@clerk/nextjs";
import { log } from "console";
import { type NextPage } from "next";
import Head from "next/head";
import dayjs from "dayjs";
import relativeTime from 'dayjs/plugin/relativeTime';
import Link from "next/link";
import Image from "next/image";

import { api } from "~/utils/api";
import { RouterOutputs } from "~/utils/api";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {

const {user} = useUser();


if (!user) return null;


return <div >
  <Image className="rounded-full" src={user.profileImageUrl} width={56} height={56} alt="" />
</div>

}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
          <div key={post.id} className="border-b border-slate-400 p-8">
              <img className="h-14 w-14 rounded-full" src={author.profilePicture}  width={56} height={56} />
              {post.bet1}
              <span>  @{author?.username}</span>
              <span> - {dayjs(post.createdAt).fromNow()}</span>
            </div>
  );

}

const Home: NextPage = () => {
  
  const user = useUser();
  
  const {data, isLoading} = api.posts.getAll.useQuery();
  
  if (isLoading) return <div>Loading...</div>
  if (!data) return <div>Something went wrong!</div>
  
  console.log(user.user?.id);

  console.log(user.user?.profileImageUrl);

  const imgURL = user.user?.profileImageUrl;
 

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">


        
<nav className=" bg-slate-200 dark:bg-gray-1200">
    <div className="flex flex-wrap justify-between items-center mx-auto max-w-screen-xl p-4 bg-slate-200">
            <span className="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">JudoBet</span>
                <div className="flex items-center">
            <a href="#" className="text-sm  text-blue-600 dark:text-blue-500 hover:underline">
              {!user.isSignedIn&&<SignInButton />}
              {!!user.isSignedIn&&<UserButton/>}
              <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
              </a>
        </div>
    </div>
</nav>
<nav className="bg-gray-100 dark:bg-gray-700">
    <div className="max-w-screen-xl px-4 py-3 mx-auto">
        <div className="flex items-center">
            <ul className="flex flex-row font-medium mt-0 mr-6 space-x-8 text-sm">
                <li>
                    <a href="#" className="text-gray-900 dark:text-white hover:underline" aria-current="page">Home</a>
                </li>
                <li>
                    <a href="#" className="text-gray-900 dark:text-white hover:underline">Tournaments</a>
                </li>
                <li>
                    <a href="#" className="text-gray-900 dark:text-white hover:underline">My Bets</a>
                </li>
                <li>
                    <a href="#" className="text-gray-900 dark:text-white hover:underline">Team</a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<div className="m-5 flex justify-center border-x sc w-full md:max-w-200">
  <CreatePostWizard />
</div>
<div className="flex justify-between items-center mx-auto max-w-screen-xl p-4 bg-slate-200">
  <input className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" 
    placeholder="Content" 
    type="text" />
  <button className="m-3 bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded">
    Submit
  </button>
</div>


       
     
        
        <div className="flex justify-between items-center mx-auto max-w-screen-xl p-4 bg-slate-20">
          {data?.map((post) =>(<p key={post.author?.id}>{post.post.bet1}</p>
          ))}
        
        <p>footer</p>
        <div className="flex flex-col">
          {[...data, ...data]?.map((fullPost) => (
            <PostView {...fullPost} key={fullPost.post.id}/>
          ))}
    
        </div>
        </div>


      </main>
    </>
  );
};  

export default Home;
